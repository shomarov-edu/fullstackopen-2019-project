enum Role {
  ADMIN
  MODERATOR
  USER
}

type User {
  id: ID! @id
  name: String!
  email: String! @unique
  username: String! @unique
  passwordHash: String!
  role: Role! @default(value: USER)
  registered: DateTime! @createdAt
  recipes: [Recipe!]! @relation(name: "WrittenRecipes")
  likedRecipes: [Recipe!]! @relation(name: "LikedRecipes", link: INLINE)
  following: [User!]! @relation(name: "FollowRelation", link: INLINE)
  followers: [User!]! @relation(name: "FollowRelation")
}

enum Category {
  BREAKFAST
  SALAD
  SOUP
  MAIN
  DESSERT
}

enum Difficulty {
  EASY
  INTERMEDIATE
  HARD
}

type Recipe {
  id: ID! @id
  author: User! @relation(name: "WrittenRecipes", link: INLINE)
  category: Category!
  title: String!
  description: String!
  cookingTime: Int!
  difficulty: Difficulty!
  ingredients: [String!]!
  method: [String!]!
  notes: [String!]!
  tags: [String!]!
  source: String
  photo: String
  created: DateTime! @createdAt
  updated: DateTime! @updatedAt
  published: Boolean! @default(value: false)
  likedBy: [User!]! @relation(name: "LikedRecipes")
  ratings: [Grade!]!
  comments: [Comment!]!
}

type Comment @embedded {
  id: ID! @id
  author: User! @relation(link: INLINE)
  content: String!
  created: DateTime! @createdAt
  updated: DateTime! @updatedAt
}

type Grade @embedded {
  id: ID! @id
  rater: User! @relation(link: INLINE)
  grade: Int!
}
